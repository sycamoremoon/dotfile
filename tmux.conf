# act like vim
setw -g mode-keys vi
set-option -g focus-events on # Set pane switching only in current window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

# Use tab for windows switching
bind -r Tab select-window -t :+
bind -r Bspace select-window -t :-

bind -r "`" select-window -t :+
bind -r "\\" select-window -t :-
#bind -r DC select-window -t :-

unbind p
bind p paste-buffer
bind -T copy-mode-vi "v" send -X begin-selection
bind -T copy-mode-vi "V" send -X rectangle-toggle
bind -T copy-mode-vi "y" send -X copy-selection-and-cancel

# act like GNU screen
unbind C-b
set -g prefix C-q
bind q send-prefix
bind C-q send-prefix
bind b send-prefix
bind C-b send-prefix

# create new windows/panes in same directory
bind c new-window -c "#{pane_current_path}"
bind "\"" split-window -v -c "#{pane_current_path}"
bind "\;" split-window -h -c "#{pane_current_path}"

#Create/kill a session
# Bind Ctrl+D to a script that checks if the shell is empty before sending Ctrl+D
bind -n C-d if-shell '[ "$(tmux display-message -p "#{pane_current_command}")" = "zsh" ] && [ "$(tmux display-message -p "#{pane_input}")" = "" ]' \
    "display-message 'use prefix-key and x to quit a pane'" \
    "send-keys C-d"
bind S command-prompt -p "Enter session name: " "new-session -s '%%'"
bind X confirm-before -p "kill-session #S? (y/n)" kill-session

# enable and disable keyboard input for panes
bind < select-pane -d \; display-message "input disabled"
bind > select-pane -e \; display-message "input enabled"

# size windows based on clients looking at that window
setw -g aggressive-resize on

# mouse control
set -g mouse off

# 禁用鼠标时切换面板的行为
unbind -n MouseDown1Pane
unbind -n MouseDrag1Pane
unbind -n MouseDown2Pane
unbind -n MouseDown3Pane
unbind -n MouseDown1Status
unbind -n MouseDrag1Status

# Synchronize panes
bind ! set-window-option synchronize-panes\; display-message "synchronize mode toggled."

# start window numbers at 1 to match keyboard order with tmux order
set -g base-index 1

# start pane numbers at 1 to match keyboard order with tmux order
setw -g pane-base-index 1

# easy resizing of panes
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5

# reenable automatic renaming for the current window
bind N setw automatic-rename on \; display-message "automatic rename enabled"

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# monitor windows for activity
setw -g monitor-activity on
setw -g monitor-bell on

# don't wait for escape sequences
set -sg escape-time 0

# display pane numbers for longer
set -g display-panes-time 2000

# increase scrollback lines
set -g history-limit 655360

# keybinding to clear history
bind C-c clear-history \; display-message "history cleared"

# C-b ! breaks current pane into separate window
# join a pane/window from the current session into the current window
bind @ command-prompt -p "create pane from:" "join-pane -s ':%%'"

# reload the .tmux.conf file with R
bind R source-file ~/.tmux.conf \; display-message "configuration reloaded"

#### theme (Solarized 256)
setw -g status-justify centre

# clock
setw -g clock-mode-colour colour64 #green

# Allow local customization in ~/.tmux_local.conf
if-shell "[ -f ~/.tmux_local.conf ]" 'source ~/.tmux_local.conf'

## plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# shortcut for tmux-resurrect
set -g @resurrect-save 'C-s'
set -g @resurrect-restore 'C-r'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
